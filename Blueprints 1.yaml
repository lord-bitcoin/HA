blueprint:
  name: Gestion automatisée des climatiseurs par saison et température
  description: |
    Automatise la gestion des climatiseurs selon la saison, les plages horaires, 
    et les températures mesurées à l'intérieur et à l'extérieur. Active également un mode humide si l'humidité mesurée sort des seuils définis.
  domain: automation
  input:
    climatiseur:
      name: Climatiseur
      description: Entité du climatiseur à contrôler.
      selector:
        entity:
          domain: climate
    temperature_interieur:
      name: Capteur de température intérieure
      description: Entité mesurant la température intérieure.
      selector:
        entity:
          domain: sensor
          device_class: temperature
    temperature_exterieur:
      name: Capteur de température extérieure
      description: Entité mesurant la température extérieure.
      selector:
        entity:
          domain: sensor
          device_class: temperature
    humidite_interieur:
      name: Capteur d'humidité intérieure
      description: Entité mesurant l'humidité intérieure.
      selector:
        entity:
          domain: sensor
          device_class: humidity
    mode_printemps:
      name: Mode de climatisation - Printemps
      description: Mode de fonctionnement du climatiseur en printemps.
      selector:
        select:
          options:
            - heat
            - cool
            - auto
    mode_ete:
      name: Mode de climatisation - Été
      description: Mode de fonctionnement du climatiseur en été.
      selector:
        select:
          options:
            - heat
            - cool
            - auto
    mode_automne:
      name: Mode de climatisation - Automne
      description: Mode de fonctionnement du climatiseur en automne.
      selector:
        select:
          options:
            - heat
            - cool
            - auto
    mode_hiver:
      name: Mode de climatisation - Hiver
      description: Mode de fonctionnement du climatiseur en hiver.
      selector:
        select:
          options:
            - heat
            - cool
            - auto
    temperature_printemps:
      name: Température cible - Printemps
      description: Température à maintenir en printemps.
      selector:
        number:
          min: 18
          max: 26
          unit_of_measurement: °C
    temperature_ete:
      name: Température cible - Été
      description: Température à maintenir en été.
      selector:
        number:
          min: 18
          max: 26
          step: 0.5
          unit_of_measurement: °C
    temperature_automne:
      name: Température cible - Automne
      description: Température à maintenir en automne.
      selector:
        number:
          min: 18
          max: 26
          step: 0.5
          unit_of_measurement: °C
    temperature_hiver:
      name: Température cible - Hiver
      description: Température à maintenir en hiver.
      selector:
        number:
          min: 18
          max: 26
          step: 0.5
          unit_of_measurement: °C
    heure_debut_jour:
      name: Heure de début de la journée
      description: Heure de début des plages horaires de jour.
      selector:
        time:
    heure_fin_jour:
      name: Heure de fin de la journée
      description: Heure de fin des plages horaires de jour.
      selector:
        time:
    seuil_tolerance:
      name: Seuil de tolérance
      description: Marge autour de la température cible pour ajuster la climatisation.
      selector:
        number:
          min: 0
          max: 3
          step: 0.5
          unit_of_measurement: °C
    temperature_max_preservation:
      name: Température max tolérée - Mode préservation
      description: Température maximale à ne pas dépasser en mode préservation.
      selector:
        number:
          min: 20
          max: 30
          step: 0.5
          unit_of_measurement: °C
    humidite_min:
      name: Humidité minimale
      description: Seuil d'humidité minimal avant d'activer le mode humide.
      selector:
        number:
          min: 40
          max: 50
          step: 2.5
          unit_of_measurement: "%"
    humidite_max:
      name: Humidité maximale
      description: Seuil d'humidité maximal avant d'activer le mode humide.
      selector:
        number:
          min: 60
          max: 70
          step: 2.5
          unit_of_measurement: "%"
mode: single
trigger:
  - platform: state
    entity_id: !input temperature_interieur
  - platform: state
    entity_id: !input humidite_interieur
  - platform: time_pattern
    minutes: "/5"
condition: []
action:
  - variables:
      date_actuelle: '{{ now() }}'
      saison: >-
        {% set mois = date_actuelle.month %}
        {% set jour = date_actuelle.day %}
        {% if (mois == 12 and jour >= 21) or (mois == 1) or (mois == 2) or (mois == 3 and jour < 20) %} hiver
        {% elif (mois == 3 and jour >= 20) or (mois == 4) or (mois == 5) or (mois == 6 and jour < 21) %} printemps
        {% elif (mois == 6 and jour >= 21) or (mois == 7) or (mois == 8) or (mois == 9 and jour < 23) %} ete
        {% else %} automne
        {% endif %}
      mode_actuel: >-
        {% if saison == 'printemps' %} {{ input_mode_printemps }}
        {% elif saison == 'ete' %} {{ input_mode_ete }}
        {% elif saison == 'automne' %} {{ input_mode_automne }}
        {% else %} {{ input_mode_hiver }}
        {% endif %}
      temperature_cible: >-
        {% if saison == 'printemps' %} {{ input_temperature_printemps }}
        {% elif saison == 'ete' %} {{ input_temperature_ete }}
        {% elif saison == 'automne' %} {{ input_temperature_automne }}
        {% else %} {{ input_temperature_hiver }}
        {% endif %}
      temperature_min: '{{ temperature_cible - seuil_tolerance }}'
      temperature_max: '{{ temperature_cible + seuil_tolerance }}'
      temperature_interieur: '{{ states(input_temperature_interieur) | float }}'
      temperature_exterieur: '{{ states(input_temperature_exterieur) | float }}'
      humidite_interieur: '{{ states(input_humidite_interieur) | float }}'
  - choose:
      - conditions:
          - condition: template
            value_template: '{{ temperature_interieur > temperature_max }}'
        sequence:
          - service: climate.set_hvac_mode
            data:
              entity_id: !input climatiseur
              hvac_mode: '{{ mode_actuel }}'
          - service: climate.set_temperature
            data:
              entity_id: !input climatiseur
              temperature: '{{ temperature_cible }}'
      - conditions:
          - condition: template
            value_template: '{{ temperature_interieur < temperature_min }}'
        sequence:
          - service: climate.set_hvac_mode
            data:
              entity_id: !input climatiseur
              hvac_mode: '{{ mode_actuel }}'
          - service: climate.set_temperature
            data:
              entity_id: !input climatiseur
              temperature: '{{ temperature_cible }}'
      - conditions:
          - condition: template
            value_template: >-
              {{ temperature_exterieur > temperature_cible + 7 }}
        sequence:
          - service: climate.set_hvac_mode
            data:
              entity_id: !input climatiseur
              hvac_mode: cool
          - service: climate.set_temperature
            data:
              entity_id: !input climatiseur
              temperature: >-
                {{ [temperature_exterieur - 7, temperature_max_preservation] | min }}
      - conditions:
          - condition: template
            value_template: >-
              {{ humidite_interieur < input_humidite_min }}
        sequence:
          - service: climate.set_hvac_mode
            data:
              entity_id: !input climatiseur
              hvac_mode: dry
      - conditions:
          - condition: template
            value_template: >-
              {{ humidite_interieur > input_humidite_max }}
        sequence:
          - service: climate.set_hvac_mode
            data:
              entity_id: !input climatiseur
              hvac_mode: dry
