blueprint:
  name: Gestion automatique du climatiseur avec seuil de température
  description: Un blueprint pour ajuster automatiquement un climatiseur en fonction de la température mesurée.
  domain: automation
  input:
    temperature_entity:
      name: Capteur de température 
      selector:
        entity:
          domain: input_number
    climatiseur_entity:
      name: Entité du climatiseur
      selector:
        entity:
          domain: climate
    current_season:
      name: Input text de la saison actuelle
      selector:
        entity:
          domain: input_text
    selected_season:
      name: saison choisie
      selector:
        select:
          options:
            - "Toutes les saisons"
            - "Printemps"
            - "Été" 
            - "Automne"
            - "Hiver"
    schedule_entity:
      name: Schedule
      selector:
        entity:
          domain: schedule
    temperature_cible:
      name: Température cible
      selector: 
        entity: 
          domain: input_number
    min_temperature:
      name: Température minimale tolérée
      selector:
        entity:
          domain: sensor
    max_temperature:
      name: Température maximale tolérée 
      selector:
        entity:
          domain: sensor
          
trigger:
  - platform: state
    entity_id: !input temperature_entity
  - platform: time_pattern
    minutes: /15
  - platform: state 
    entity_id: !input schedule_entity

condition:
  - alias: "Vérification du schedule et de la saison"
    and:
      - condition: state
        entity_id: !input schedule_entity
        state: "on"
      - condition: state
        entity_id: !input current_season
        state: !input selected_season

action:
  - choose:
      # Condition : Si la température actuelle est supérieure à la tolérance
      - conditions:
          - condition: numeric_state
            entity_id: !input temperature_entity
            above: !input max_temperature
        sequence:
          # Activer le mode ventilation (fan only) pour 15 minutes
          - service: climate.set_hvac_mode
            target:
              entity_id: !input climatiseur_entity
            data:
              hvac_mode: fan_only
          - delay: "00:15:00"  # Attendre 15 minutes
          # Vérifier si la température est toujours au-dessus du seuil
          - choose:
              - conditions:
                  - condition: numeric_state
                    entity_id: !input temperature_entity
                    above: !input max_temperature
                sequence:
                  # Si la température est toujours au-dessus du seuil, éteindre le climatiseur
                  - service: climate.set_hvac_mode
                    target:
                      entity_id: !input climatiseur_entity
                    data:
                      hvac_mode: "off"

      # Condition : Si la température actuelle est inférieure à la tolérance
      - conditions:
          - condition: numeric_state
            entity_id: !input temperature_entity
            below: !input min_temperature
        sequence:
          # Activer le mode chauffage et régler la température cible
          - service: climate.set_hvac_mode
            target:
              entity_id: !input climatiseur_entity
            data:
              hvac_mode: heat
          - service: climate.set_temperature
            target:
              entity_id: !input climatiseur_entity
            data:
              temperature: !input temperature_cible

      # Condition : Si la température cible est atteinte (dans les tolérances)
      - conditions:
          - condition: numeric_state
            entity_id: !input temperature_entity
            between: [!input min_temperature, !input max_temperature]
        sequence:
          - delay: "00:15:00"
          # Vérifier si la température est toujours dans les tolérances
          - choose:
              - conditions:
                  - condition: numeric_state
                    entity_id: !input temperature_entity
                    between: [!input min_temperature, !input max_temperature]
                sequence:
                  # Si la température est toujours dans les tolérances, mode auto
                  - service: climate.set_hvac_mode
                    target:
                      entity_id: !input climatiseur_entity
                    data:
                      hvac_mode: auto
                  - service: climate.set_fan_mode
                    target:
                      entity_id: !input climatiseur_entity
                    data:
                      fan_mode: auto

mode: restart
